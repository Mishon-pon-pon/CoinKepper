!function(t){var e={};function a(n){if(e[n])return e[n].exports;var o=e[n]={i:n,l:!1,exports:{}};return t[n].call(o.exports,o,o.exports,a),o.l=!0,o.exports}a.m=t,a.c=e,a.d=function(t,e,n){a.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},a.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},a.t=function(t,e){if(1&e&&(t=a(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(a.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)a.d(n,o,function(e){return t[e]}.bind(null,o));return n},a.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return a.d(e,"a",e),e},a.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},a.p="",a(a.s=0)}([function(t,e,a){"use strict";function n(t,e){this.Name=t,this.CategoryId=e}function o(t,e,a){this.id=a,this.Value=t,this.CategoryId=e}a.r(e);const i=new Vue({el:"#CategoriesDivContent",data:{categories:[]}}),r=new Vue({el:"#historyOperationDivContent",data:{sums:[]}}),u=function(t){return fetch(t,{method:"GET"}).then(t=>t.json())},d=function(t,e){return fetch(t,{method:"POST",body:JSON.stringify(e),headers:{Accept:"application/json","Content-Type":"application/json"}}).then(t=>t.json())},l=function(t,e){return fetch(t+`/${e}`,{method:"DELETE"}).then(t=>t.json())};const c={dataCache:[],update:function(t){let e=[];for(var a=0;a<t.length;a++)t[a].input="input",0!==t[a].Value&&e.push({name:t[a].Name,y:t[a].Value});var n,o;i.categories=t,n="container",o=e,Highcharts.chart(n,{chart:{plotBackgroundColor:null,plotBorderWidth:null,plotShadow:!1,type:"pie"},title:{text:"Ваши траты в процентах к общей сумме"},tooltip:{pointFormat:"{series.name}: <b>{point.percentage:.1f}%</b>"},plotOptions:{pie:{allowPointSelect:!0,cursor:"pointer",dataLabels:{enabled:!0,style:{color:Highcharts.theme&&Highcharts.theme.contrastTextColor||"black"}}}},series:[{name:"Вы потратили",colorByPoint:!0,data:o}]})},load:function(t){u(t).then(t=>{if(t){for(var e=0;e<t.length;e++)this.dataCache.push(Object.assign(new n(t[e].Name,t[e].CategoryId),new o(t[e].Value,t[e].CategoryId)));this.update(this.dataCache)}})},save:function(t,e){d(t,e).then(t=>{this.dataCache.push(Object.assign(new n(e.Name,t.CategoryId),new o(0,t.CategoryId))),this.update(this.dataCache)})},delete:function(t,e){l(t,e).then(t=>{for(var e=0;e<this.dataCache.length;e++)this.dataCache[e].CategoryId==t&&(this.dataCache.splice(e,1),this.update(this.dataCache))})}},s={dataCache:[],update:function(t){this.dataCache=t,r.sums=this.dataCache},load:function(t,e){u(t+`/${e}`).then(t=>{this.update(t)})},save:function(t,e){d(t,e).then(t=>{t&&c.dataCache.forEach(e=>{e.CategoryId==t.CategoryId&&(e.Value+=t.Value)}),c.update(c.dataCache)})},delete:function(t,e){l(t,e).then(t=>{for(let e=0;e<this.dataCache.length;e++){if(this.dataCache[e].SumId==t.SumId){let t=this.dataCache[e].Value;this.dataCache.splice(e,1);for(let e=0;e<c.dataCache.length;e++)c.dataCache[e].CategoryId==this.dataCache[0].CategoryId&&(c.dataCache[e].Value-=t)}this.update(this.dataCache),c.update(c.dataCache)}}).catch(t=>{t&&console.log(t)})}};document.addEventListener("DOMContentLoaded",()=>{c.load("/category/exist")}),document.getElementById("addCategory").addEventListener("click",()=>{let t=document.getElementById("categoryName").value;c.save("/category/new",new n(t,null)),document.getElementById("categoryName").value=""}),document.getElementById("body").addEventListener("click",t=>{if(t.target.getAttribute("button_delete")){let e=t.target.getAttribute("button_delete");c.delete("/category/delete",e)}if(t.target.getAttribute("button_addSum")){let e=t.target.getAttribute("button_addSum"),a=document.getElementById("input"+e).value;a&&(s.save("/sum/new",new o(a,e)),document.getElementById("input"+e).value="")}if(t.target.getAttribute("button_getSumHistory")){let e=t.target.getAttribute("button_getSumHistory");s.load("/sum/category",e)}if(t.target.getAttribute("button_rowEdit")){let e=t.target.getAttribute("button_rowEdit");$('[button_rowEdit = "'+e+'"]').toggle("hiden"),$('[button_rowSave = "'+e+'"]').toggle("hiden");$('[editRow_spanDate = "'+e+'"]').text(),$('[editRow_spanValue = "'+e+'"]').text();$('[editRow_inputDate = "'+e+'"]').prop("disabled",!1),$('[editRow_inputValue = "'+e+'"]').prop("disabled",!1)}if(t.target.getAttribute("button_rowSave")){let e=t.target.getAttribute("button_rowSave");$('[button_rowEdit = "'+e+'"]').toggle("hiden"),$('[button_rowSave = "'+e+'"]').toggle("hiden"),$('[editRow_inputDate = "'+e+'"]').prop("disabled",!0),$('[editRow_inputValue = "'+e+'"]').prop("disabled",!0)}if(t.target.getAttribute("button_deleteSum")){let e=t.target.getAttribute("button_deleteSum");s.delete("/sum/delete",e)}})}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,